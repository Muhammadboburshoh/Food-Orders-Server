create database orders_food;

create table users(
  user_id int generated by default as identity primary key,
  role smallint default 0,
  username varchar(40) not null,
  password varchar(64) not null
);

create unique index username_idx on users (lower(username));

CREATE UNIQUE INDEX idx_employees_mobile_phone
ON tables(table_number);

create extension pgcrypto;


create table categories (
  category_id int generated by default as identity primary key,
  category_name varchar(32) not null
);

create table products (
  product_id int generated by default as identity primary key,
  product_name varchar(64) not null,
  category_id int not null references categories(category_id),
  product_price decimal(15, 2) not null,
  product_image varchar(70),
  product_available boolean default true
);

create table tables(
  table_id int generated by default as identity primary key,
  table_number int not null
);


cretae table orders (
  order_id int generated by default as identity primary key,
  time timestamp with time zone default current_timestamp,
  status boolean deafult false,
  table_id int not null references tables(product_id)
);

create table order_item(
  id seril int generated by default as identity primary key,
  order_id int not null references orders (product_id),
  product_id int not null references products(product_id),
  time timestamp with time zone default current_timestamp,
  count int dafault 1
);



create or replace function new_order() returns trigger language plpgsql as $$

  begin
    if (select user_id::boolean from applications where direction_id = NEW.direction_id and user_id = NEW.user_id) then
      return null;
    else
      return NEW;
    end if;
  end;
$$;

create trigger new_order_t before insert on orders for each row execute procedure new_order();


--me-table
create table orders(
  order_id int generated by default as identity primary key,
  order_time timestamp with time zone default current_timestamp,
  order_status smallint default 0,
  table_id int not null references tables(table_id)
);

create table order_item(
  item_id int generated by default as identity primary key,
  item_count int default 1,
  product_id int not null references products (product_id),
  table_id int not null references tables(table_id)
);
--
create table completed_order (
  completed_id int generated by default as identity primary key,
  completed_count int default 1,
  product_id int not null references products (product_id),
  table_id int not null references tables(table_id)
);




/* 
create table orders (
  order_id int generated by default as identity primary key,
  order_time timestamptz default current_timestamp,
  order_product_count smallint default 1,
  product_id int not null references products(product_id),
  table_id int not null references tables(table_id)
); */
/* create table order_products (
	order_product_id int generated by default as identity primary key,
	order_id int not null references orders (order_id),
	product_id int not null references products(product_id),
	order_product_count smallint default 1
); */

